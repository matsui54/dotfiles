[[plugins]]
repo = 'Shougo/ddc.vim'
depends = ['context_filetype.vim', 'pum.vim']
on_event = ['InsertEnter', 'CmdlineEnter']
hook_source = '''
  if v:false
    source ~/dotfiles/nvim/plugins/ddc.rc.vim
  endif
'''

[[plugins]]
repo = 'Shougo/pum.vim'

[[plugins]]
repo = 'Shougo/context_filetype.vim'
on_event = 'BufRead'

[[plugins]]
repo = 'Shougo/neco-vim'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-cmdline'
lazy = 0

[[plugins]]
repo = 'Shougo/ddc-cmdline-history'
lazy = 0

[[plugins]]
repo = 'Shougo/ddc-around'
lazy = 0

[[plugins]]
repo = 'Shougo/ddc-zsh'
lazy = 0

[[plugins]]
repo = 'Shougo/ddc-matcher_head'
lazy = 0

[[plugins]]
repo = 'Shougo/ddc-converter_remove_overlap'
lazy = 0

[[plugins]]
repo = 'Shougo/ddc-sorter_rank'
lazy = 0

[[plugins]]
repo = 'matsui54/ddc-dictionary'
lazy = 0

[[plugins]]
repo = 'tani/ddc-fuzzy'
lazy = 0

[[plugins]]
repo = 'Shougo/ddc-nvim-lsp'
lazy = 0

[[plugins]]
repo = 'matsui54/ddc-buffer'
lazy = 0

[[plugins]]
repo = 'matsui54/ddc-ultisnips'
lazy = 0

[[plugins]]
repo = 'matsui54/ddc-filter_editdistance'
lazy = 0

[[plugins]]
repo = "matsui54/ddc-postfilter_score"
lazy = 0

[[plugins]]
repo = 'matsui54/ddc-converter_truncate'
lazy = 0

[[plugins]]
repo = "gamoutatsumi/ddc-emoji"
lazy = 0

[[plugins]]
repo = 'matsui54/denops-popup-preview.vim'
on_source = 'ddc.vim'
hook_source = '''
	let g:popup_preview_config = {
	      \ 'delay': 30,
        \ 'maxWidth': 100,
        \ 'winblend': 0,
        \ 'debug': v:false,
	      \ }
  call popup_preview#enable()
  let g:markdown_fenced_languages = ['ts=typescript']
'''

[[plugins]]
repo = 'matsui54/denops-signature_help'
on_source = 'ddc.vim'
hook_source = '''
	let g:signature_help_config = {
        \ 'style': 'virtual',
        \ 'border': v:false,
        \ }
  call signature_help#enable()
  let g:markdown_fenced_languages = ['ts=typescript']
'''

[[plugins]]
repo = 'ray-x/lsp_signature.nvim'
if = "has('nvim')"
on_source = 'nvim-lspconfig'

[[plugins]]
repo = 'shun/ddc-vim-lsp'
lazy = 0

[[plugins]]
repo = 'LumaKernel/ddc-file'
lazy = 0

[[plugins]]
repo = 'hrsh7th/vim-vsnip'
depends = ['vim-vsnip-integ', 'friendly-snippets']
on_source = 'ddc.vim'
hook_add = '''
" Expand
imap <expr> <C-l> vsnip#expandable() ? '<Plug>(vsnip-expand)' : '<C-l>'
smap <expr> <C-l> vsnip#expandable() ? '<Plug>(vsnip-expand)' : '<C-l>'

" Jump forward or backward
imap <expr> <C-f> vsnip#jumpable(1)  ? '<Plug>(vsnip-jump-next)' : '<C-f>'
smap <expr> <C-f> vsnip#jumpable(1)  ? '<Plug>(vsnip-jump-next)' : '<C-f>'
imap <expr> <C-b> vsnip#jumpable(-1) ? '<Plug>(vsnip-jump-prev)' : '<C-b>'
smap <expr> <C-b> vsnip#jumpable(-1) ? '<Plug>(vsnip-jump-prev)' : '<C-b>'
let g:vsnip_snippet_dir = expand('~/dotfiles/nvim/snippets')
'''

[[plugins]]
repo = 'hrsh7th/vim-vsnip-integ'

[[plugins]]
repo = 'rafamadriz/friendly-snippets'

[[plugins]]
repo = 'vim-skk/denops-skkeleton.vim'
on_source = 'ddc.vim'
on_map = {ic = '<plug>(skkeleton-'}
hook_add = '''
  imap <C-j> <Plug>(skkeleton-toggle)
  cmap <C-j> <Plug>(skkeleton-toggle)

  function! s:skkeleton_init() abort
    " <BS>/<C-h>で変換候補を戻す
    call skkeleton#register_keymap('henkan', "\<BS>", 'henkanBackward')
    call skkeleton#register_keymap('henkan', "\<C-h>", 'henkanBackward')
    call skkeleton#register_keymap('henkan', "x", '')

    call skkeleton#config({
      \ 'userJisyo': expand('~/.cache/skkeleton/skkeleton'),
      \ 'completionRankFile': expand('~/.cache/skkeleton/rank.json'),
      \ })
    call skkeleton#register_kanatable('rom', {
      \ "z\<Space>": ["\u3000", ''],
      \ 'jj': 'escape',
      \ 'z,': ['，', ''],
      \ 'z9': ['（', ''],
      \ 'z0': ['）', ''],
      \ })
    if has('win32') || has('win64')
      call skkeleton#config({
        \ 'globalJisyo': expand('~/AppData/Local/skk/SKK-JISYO.L')
        \ })
    endif
  endfunction
  autocmd User skkeleton-initialize-pre call s:skkeleton_init()
'''
